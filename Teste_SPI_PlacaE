#include <SPI.h>
#include  <ADE9000RegMap.h>
#include <ADE9000API.h>

/*Basic initializations*/
ADE9000Class ade9000;
#define SPI_SPEED 5000000     //SPI Speed
#define CS_PIN 17             //rojeto 2 --> 17
#define ADE9000_RESET_PIN 18  //Projeto 2 --> 18
#define PM_1 8                //Projeto 2 --> 8
#define PM_0 3                //Projeto 2 --> 3


void resetADE9000(void);

void setup() 
{
  Serial.begin(115200);
  Serial.println("Serial Monitor OK");

  pinMode(PM_1, OUTPUT);    //Set PM1 pin as output 
  digitalWrite(PM_1, LOW);   //Set PM1 select pin low for PSM0 mode
  pinMode(PM_0, OUTPUT);    //Set PM0 pin as output 
  digitalWrite(PM_0, LOW);   //Set PM0 select pin low for PSM0 mode

  pinMode(ADE9000_RESET_PIN, OUTPUT);
  digitalWrite(ADE9000_RESET_PIN, HIGH); 

  resetADE9000(); 

  delay(1000);
  ade9000.SPI_Init(SPI_SPEED,CS_PIN); //Initialize SPI
  ade9000.SetupADE9000();             //Initialize ADE9000 registers according to values in ADE9000API.h
}

void loop() 
{
  int valorTeste = 7;

  ade9000.SPI_Write_32(ADDR_AIGAIN0, valorTeste);
  uint32_t teste = ade9000.SPI_Read_32(ADDR_AIGAIN0);

  if (teste == 7) 
  {
    Serial.println("Comunicacao SPI OK.");
  }  
  else 
  {
    Serial.println("Erro na comunicacao SPI");
  }

  Serial.print("Valor de teste de ADDR_AIGAIN0: ");
  Serial.println(teste);
  
  delay(1000);
}

void resetADE9000(void)
{
 digitalWrite(ADE9000_RESET_PIN, LOW);
 delay(50);
 digitalWrite(ADE9000_RESET_PIN, HIGH);
 delay(1000);
 Serial.println("Reset Done");
}
